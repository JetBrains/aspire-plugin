// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ResourceProto/resource_service.proto
// </auto-generated>
// Original file comments:
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Aspire.DashboardService.Proto.V1 {
  public static partial class DashboardService
  {
    static readonly string __ServiceName = "aspire.v1.DashboardService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest> __Marshaller_aspire_v1_ApplicationInformationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse> __Marshaller_aspire_v1_ApplicationInformationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest> __Marshaller_aspire_v1_WatchResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate> __Marshaller_aspire_v1_WatchResourcesUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest> __Marshaller_aspire_v1_WatchResourceConsoleLogsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate> __Marshaller_aspire_v1_WatchResourceConsoleLogsUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest> __Marshaller_aspire_v1_ResourceCommandRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse> __Marshaller_aspire_v1_ResourceCommandResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate> __Marshaller_aspire_v1_WatchInteractionsRequestUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate> __Marshaller_aspire_v1_WatchInteractionsResponseUpdate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest, global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse> __Method_GetApplicationInformation = new grpc::Method<global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest, global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetApplicationInformation",
        __Marshaller_aspire_v1_ApplicationInformationRequest,
        __Marshaller_aspire_v1_ApplicationInformationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest, global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate> __Method_WatchResources = new grpc::Method<global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest, global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "WatchResources",
        __Marshaller_aspire_v1_WatchResourcesRequest,
        __Marshaller_aspire_v1_WatchResourcesUpdate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest, global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate> __Method_WatchResourceConsoleLogs = new grpc::Method<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest, global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "WatchResourceConsoleLogs",
        __Marshaller_aspire_v1_WatchResourceConsoleLogsRequest,
        __Marshaller_aspire_v1_WatchResourceConsoleLogsUpdate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest, global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse> __Method_ExecuteResourceCommand = new grpc::Method<global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest, global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteResourceCommand",
        __Marshaller_aspire_v1_ResourceCommandRequest,
        __Marshaller_aspire_v1_ResourceCommandResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate, global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate> __Method_WatchInteractions = new grpc::Method<global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate, global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "WatchInteractions",
        __Marshaller_aspire_v1_WatchInteractionsRequestUpdate,
        __Marshaller_aspire_v1_WatchInteractionsResponseUpdate);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Aspire.DashboardService.Proto.V1.ResourceServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DashboardService</summary>
    [grpc::BindServiceMethod(typeof(DashboardService), "BindService")]
    public abstract partial class DashboardServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse> GetApplicationInformation(global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task WatchResources(global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest request, grpc::IServerStreamWriter<global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task WatchResourceConsoleLogs(global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest request, grpc::IServerStreamWriter<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse> ExecuteResourceCommand(global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task WatchInteractions(grpc::IAsyncStreamReader<global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate> requestStream, grpc::IServerStreamWriter<global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DashboardService</summary>
    public partial class DashboardServiceClient : grpc::ClientBase<DashboardServiceClient>
    {
      /// <summary>Creates a new client for DashboardService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DashboardServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DashboardService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DashboardServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DashboardServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DashboardServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse GetApplicationInformation(global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApplicationInformation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse GetApplicationInformation(global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetApplicationInformation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse> GetApplicationInformationAsync(global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApplicationInformationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse> GetApplicationInformationAsync(global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetApplicationInformation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate> WatchResources(global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WatchResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate> WatchResources(global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_WatchResources, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate> WatchResourceConsoleLogs(global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WatchResourceConsoleLogs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate> WatchResourceConsoleLogs(global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_WatchResourceConsoleLogs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse ExecuteResourceCommand(global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteResourceCommand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse ExecuteResourceCommand(global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecuteResourceCommand, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse> ExecuteResourceCommandAsync(global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExecuteResourceCommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse> ExecuteResourceCommandAsync(global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecuteResourceCommand, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate, global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate> WatchInteractions(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WatchInteractions(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate, global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate> WatchInteractions(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_WatchInteractions, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DashboardServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DashboardServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DashboardServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetApplicationInformation, serviceImpl.GetApplicationInformation)
          .AddMethod(__Method_WatchResources, serviceImpl.WatchResources)
          .AddMethod(__Method_WatchResourceConsoleLogs, serviceImpl.WatchResourceConsoleLogs)
          .AddMethod(__Method_ExecuteResourceCommand, serviceImpl.ExecuteResourceCommand)
          .AddMethod(__Method_WatchInteractions, serviceImpl.WatchInteractions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DashboardServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetApplicationInformation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aspire.DashboardService.Proto.V1.ApplicationInformationRequest, global::Aspire.DashboardService.Proto.V1.ApplicationInformationResponse>(serviceImpl.GetApplicationInformation));
      serviceBinder.AddMethod(__Method_WatchResources, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Aspire.DashboardService.Proto.V1.WatchResourcesRequest, global::Aspire.DashboardService.Proto.V1.WatchResourcesUpdate>(serviceImpl.WatchResources));
      serviceBinder.AddMethod(__Method_WatchResourceConsoleLogs, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsRequest, global::Aspire.DashboardService.Proto.V1.WatchResourceConsoleLogsUpdate>(serviceImpl.WatchResourceConsoleLogs));
      serviceBinder.AddMethod(__Method_ExecuteResourceCommand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Aspire.DashboardService.Proto.V1.ResourceCommandRequest, global::Aspire.DashboardService.Proto.V1.ResourceCommandResponse>(serviceImpl.ExecuteResourceCommand));
      serviceBinder.AddMethod(__Method_WatchInteractions, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Aspire.DashboardService.Proto.V1.WatchInteractionsRequestUpdate, global::Aspire.DashboardService.Proto.V1.WatchInteractionsResponseUpdate>(serviceImpl.WatchInteractions));
    }

  }
}
#endregion
